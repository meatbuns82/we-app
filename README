项目： we-app:
原型设计： https://cloud.fynote.com/edit?nid=346610&id=1695611567093&t=1695613707826
思维导图： https://cloud.fynote.com/edit?nid=346599&id=1695611141077&t=1695613720353

git 提交的约定
feat: 代表功能性的提交
fix: 代表bug的修复
chore: 代表版本的增加
refactor: 代表一些非功能性的，如代码格式，命名规范，依赖管理这些，

项目目标：
    项目名： we-app
    项目描述： 目前设计是一个在线菜谱，家庭计划的小程序，可以共同决定今晚想吃什么菜，添加需要买的菜品等，一键完成待办，代购
             在这里家庭的人可以共同的编辑家庭的相关内容，
             可以共同通过共享在线文档制定家庭旅游计划，家庭理财计划等
    项目功能：
        公共主体：
            1. 在线菜单
            2. 在线点菜
            3. 在线学菜
            4. 群组建立，群组邀人，群组内菜单，群组内计划添加，群组内idea分享，群组待办
            5. 日志行为记录，日志行为分析（待）
        第一部分主体： 家庭
            1. 家庭代购，家庭待办
            2. 家庭人员点单，通知负责人
            3. 夫妻纪念日提醒
            4. 待办，代购日程提醒
        第二部分主体： 聚会
            1. 聚会打卡
            2. 聚会日程提醒，
            3. 聚会负责人接受菜单，计划，idea，待办项提醒
项目主要功能设计：


项目后需改动
    1. 拆分改为分布式的微服务
    2. 目前图片都已blob形式存在了数据库，需要迁移出来迁移到文件服务器，并且由nginx提供静态文件访问如 https://mydomain/xxx/xxx/xximg.jpg
    3. 接入es做搜索, 接入kafka做日志分析、事件通知
    4. 接入redis 做一些临时性的信息存储（如登录信息，临时群组，等后续其他的信息，增加系统的效率）
    4. 其他扩展再说

暂时用模块化开发，不引入springcloud， 开发简单！

模块化开发，为后面拆分出来用户服务方便

几个主要模块的介绍

order-order: 点单模块，类似下单的行为，在本系统目前就是负责点菜等
order-passport: 用户模块，负责 第三方用户登录，权限鉴定等
order-group: 群组模块， 群组目前暂时定义为两种，
        一种是临时群组，临时群组有效期自选，到期自动解散，
        一种是永久群组，不设置有效期，不会解散，除非手动解散

order-document: 在线文档的编辑等，如excel, word等的编辑
order-redis:  负责redis相关的操作等， redis目前主要用来维护临时群组等，以及token的过期校验等
order-es: 负责和es的交互等， 系统内的搜索等，都交给es来处理，相关的如分词，关联搜索，es数据初始化等
order-kafka: 这里是消息中间件，决定采用kafka,因为想要分析日志行为，所以引用kafka更合适点

order-store: 存储服务，存储图片、存储文件等等（目前没有引入分布式的文件存储，
                后面可以考虑引入HDFS + fink,分布式文件存储，同时使用flink试试对kafka的日志文件进行分析，进行用户行为的分析（大数据））
order-test: 测试模块，接口写完之后可以放在这里面进行测试
